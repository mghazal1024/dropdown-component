(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react')) :
  typeof define === 'function' && define.amd ? define(['react'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.dropdown = factory(global.React));
})(this, (function (React) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];

    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;

    var _s, _e;

    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }

  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

    return arr2;
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var Dropdown = function Dropdown(props) {
    var list = props.list,
        name = props.name,
        handleSelection = props.handleSelection,
        reset = props.reset,
        initialValue = props.initialValue; // STATES

    var _useState = React.useState(false),
        _useState2 = _slicedToArray(_useState, 2),
        dropdownActive = _useState2[0],
        setDropdownActive = _useState2[1];

    var _useState3 = React.useState(),
        _useState4 = _slicedToArray(_useState3, 2),
        selection = _useState4[0],
        setSelection = _useState4[1]; // REFS


    var ref = React.useRef(null);
    var dropdownRef = React.useRef(null);
    var title = React.useRef(null); // Handles dropdown

    var handleDropdownActive = function handleDropdownActive(e) {
      if (ref.current && !ref.current.contains(e.target)) {
        setDropdownActive(false);
      }

      if (!dropdownActive && title.current && title.current.contains(e.target)) {
        setDropdownActive(true);
      }
    }; // Handles data change


    var handleChange = function handleChange(data) {
      handleSelection(data);
    }; // LIFECYCLE of the Component


    React.useEffect(function () {
      document.addEventListener('click', handleDropdownActive, true);
      dropdownRef.current.addEventListener('focusin', function () {
        setDropdownActive(true);
      });
      dropdownRef.current.addEventListener('focusout', function () {
        setDropdownActive(false);
      });
    }, []);
    React.useEffect(function () {
      setSelection(initialValue ? initialValue : '');
    }, [reset]);
    return /*#__PURE__*/React__default["default"].createElement("div", {
      className: "dropdown",
      tabIndex: 0,
      ref: dropdownRef
    }, /*#__PURE__*/React__default["default"].createElement("div", {
      ref: title,
      className: "dropdown__block dropdown__block--title",
      onClick: function onClick() {
        return handleDropdownActive;
      }
    }, /*#__PURE__*/React__default["default"].createElement("p", {
      className: "dropdown__title"
    }, !selection ? "Select a ".concat(name) : selection)), /*#__PURE__*/React__default["default"].createElement("div", {
      className: "dropdown__block"
    }, /*#__PURE__*/React__default["default"].createElement("ul", {
      ref: ref,
      className: "dropdown__list ".concat(dropdownActive ? 'dropdown__list--active' : '')
    }, list.map(function (li, i) {
      return /*#__PURE__*/React__default["default"].createElement("li", {
        key: i,
        className: "dropdown__list-item",
        onClick: function onClick() {
          setSelection(li);
          setDropdownActive(false);
          handleChange(li);
        }
      }, li);
    }))));
  };

  return Dropdown;

}));
