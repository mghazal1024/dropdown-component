import{createFilter as _}from"@rollup/pluginutils";import y from"path";var $=(e={})=>{var n,c,d;e.transform||(e.transform=r=>r);const f={},O=(n=e.alwaysOutput)!=null?n:!1,x=_((c=e.include)!=null?c:["**/*.css"],(d=e.exclude)!=null?d:[]),p=(r,a,s=new Set)=>{if(s.has(r))return[];s.add(r);const t=[r];return a(r).importedIds.forEach(u=>{t.push(...p(u,a,s))}),t};return{name:"import-css",transform(r,a){if(!x(a))return;const s=e.minify?b(e.transform(r)):e.transform(r);return(!f[a]||f[a]!=s)&&(f[a]=s),{code:`export default ${JSON.stringify(s)};`,map:{mappings:""}}},generateBundle(r,a){var s,t;let u={},m=null;for(let l in a)u=Object.assign(u,a[l].modules),m||(m=a[l].facadeModuleId);const g=p(m,this.getModuleInfo),o=Object.entries(f).sort((l,i)=>g.indexOf(l[0])-g.indexOf(i[0])).map(([l,i])=>{if(!u[l])return i}).join(`
`);if(o.trim().length<=0&&!O)return;const h=(t=e.output)!=null?t:(s=r.file)!=null?s:"bundle.js",S=y.basename(h,y.extname(h));this.emitFile({type:"asset",fileName:`${S}.css`,source:o})}}};function b(e){return e=e.replace(/\/\*(?:(?!\*\/)[\s\S])*\*\/|[\r\n\t]+/g,""),e=e.replace(/ {2,}/g," "),e=e.replace(/ ([{:}]) /g,"$1"),e=e.replace(/([{:}]) /g,"$1"),e=e.replace(/([;,]) /g,"$1"),e=e.replace(/ !/g,"!"),e}export{$ as default};
